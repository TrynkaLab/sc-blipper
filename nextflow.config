// ---------------------------------------------------------------------------------- //
//                             Nextflow / executor settings
// ---------------------------------------------------------------------------------- //
conda.enabled = true
singularity.enabled = false

manifest.mainScript = "main.nf"

profiles {
    local { includeConfig 'conf/local.config'}
    lsf { includeConfig 'conf/lsf.config'}
    lsf_ignore_errors { includeConfig 'conf/lsf_ignore_errors.config'}
}

report.overwrite=true
trace.overwrite=true

// ---------------------------------------------------------------------------------- //
//                                    Process labels
// ---------------------------------------------------------------------------------- //
includeConfig 'conf/processes.config'

// ---------------------------------------------------------------------------------- //
//                                  Plugins & Schema
// ---------------------------------------------------------------------------------- //
plugins {
  id 'nf-schema@2.4.1'
}

validation {
  help {
    enabled = true
  }
  
  failUnrecognisedParams=true
}


// ---------------------------------------------------------------------------------- //
//                                      Parameters
// ---------------------------------------------------------------------------------- //
params {
    
  // -------------------------------------------------------------------------
  // Global run options
  
  // Path to the manifest
  rn_manifest=null
  
  // The publish folder for the results
  rn_publish_dir=null
  
  // Use node scratch storage instead of workdir (generally ok, set to false when debugging)
  rn_scratch=false
  
  // Run name, defaults to random hash
  rn_runname=(UUID.randomUUID().toString().replaceAll('-', '')[0..4]).toLowerCase()
  //rn_runname = { ->
  //  def wdPath = java.nio.file.Paths.get(params.rn_publish_dir).getFileName().toString()
  //  return wdPath
  //}
  
  // If the input objects contain CITEseq, this should be set to the column in var that identifies them
  rn_feature_type_col=null
  
  // Used to fetch ensembl ids to gene names and for generating magma geneloc file
  rn_ensembl_version="114"
  
  // -------------------------------------------------------------------------
  // Parameters for the conversion procceses
  convert {
    label="small"
    container = ""
    conda = "/software/conda/users/ob7/sc-blipper"
    
    // Convert gene names to ensembl ids (or vice versa), global option that overrides the manifest if set to false
    // Individual file conversion still controlled at the manifest level, so if true, but all manifest is false, no conversion is done
    // Generally no need to touch this
    convert_gene_names=true
    
    // TSV file for gene ID conversion, if null this is automatically downloaded from ensembl biomart
    // Should be a 2 column tsv file with old new
    // 'new' Should be ensembl ids if you are doing gene set enrichments downstream
    // if null, need an internet connection
    // For 10x could use features.tsv.gz, to convert zcat features.tsv.gz | awk '{print $2"\t"$1}' > id_linker.tsv
    id_linker=null
    
    // Use the inverse of the id_linker file (will switch col 1 and 2)
    // If using the automated ensembl reference, instead of converting gene > ensembl, convert ensembl > gene instead
    // If NOT supplying a custom link file, you can think of this as "use_gene_names"
    invert_linker=false
  }
  
  // -------------------------------------------------------------------------
  // Parameters for the merge h5ad procceses
  merge {
    label="small"
    container = ""
    conda = "/software/conda/users/ob7/sc-blipper"
    
    // Should genes be overlapped prior to merging the h5ads
    // Otherwise, outer join is used, with non-overlaps becomming NA's
    overlap_genes=true
  }
  
  // -------------------------------------------------------------------------
  // Options for cNMF
  cnmf {
    label="small"
    container = ""
    conda = "/software/conda/users/ob7/sc-blipper"
    
    // Run preprocessing or not (makes a h5ad with variable genes, optionally harmony corrected)
    preprocess=true
    
    // Correct counts for these variables using the cnmf version of harmony. 
    // To use the batch/h5file prior to merge, use variable orig_h5ad
    // Leave at null to not apply the correction
    harmony_vars=null
    
    // Number of variable genes
    n_variable=2000
    
    // Seed for cnmf preprocess
    seed=42
    
    // Number of iterations {100}
    n_iter=10
    
    // Number of workers (a.k.a jobs)
    n_workers=3
    
    // Number of K to try, CANNOT contain 1
    // {comma seperated list of k values}
    k="2,5,6"
    
    // Loss function for the optimization
    // {frobenius,kullback-leibler,itakura-saito}
    beta_loss="frobenius"
    
    // Initialize, How to intialize the initial state of the decomp, 
    // {random,nndsvd}
    initialize="random"
    
    // Local density for consensus process {0.01}
    local_density=0.01
    
    //----------------------------------------------------------
    // cnmf posprocessing options
    // Ignore these K values in post-proccessing of cNMF factors. This is usefull to reduce jobs you are not going to use anyway.
    // {comma seperated list of k values}
    k_ignore=null
    
    // Should the enrichment process be run after cnmf
    run_enrichment=true
    
    // Should decoupler (progeny) be run on cnmf factors
    run_decoupler=true
    
    // Should magma enrichment be run on cnmf factors
    run_magma=true
  }

  enrich {
    
    label="small"
    container = ""
    conda = "/software/conda/users/ob7/sc-blipper"
    
    // Pathway information as gmt files, see assets folder
    // ID type should match the id type of your (converted) h5ad files or input matrix
    // Comma seperated list of input files
    // Also used for magma --set-annot
    gmt_files=null
    
    // Should the input matrix be transposed, columns should be conditions, rows should be genes
    // [Ignored in cnmf workflow]
    transpose=false
    
    // A txt file with gene ids specifying the universe. If null automatically determined
    // based on the input matrix
    universe=null
    
    //---------------------------
    // Settings for ORA
    // Threshold value top binarize matrix
    // [Ignored in cnmf workflow, is always 0]
    threshold = 0.05
    
    // Top n genes to use for enrichment, can be a list
    // Set to null to skip
    use_top = [50,100,250,500]
    
    // Use the absolute of the score prior to threshold or use_top
    // [Ignored in cnmf workflow, nmf is alway positive]
    absolute = true
    
    // Cache folder for decoupler databases, defaults to its default somewhere in the home folder
    omnipath_cache_dir=null
  }

  magma {
    label="tiny"
    container = ""
    conda = "/software/conda/users/ob7/sc-blipper"
    
    // A manifest with summary statistics
    // <name> <N> <snp_id_col> <pval_col> <path> 
    manifest_sumstats=null
    
    // Plink bed/bim/fam prefix for LD reference panel to be used
    // Reccomend 1000G panel of matching population
    ld_reference=null
    
    // Up and downstream window (kb) for variants to include, used in magma annotate
    annotate_window="50,10"
  }
}